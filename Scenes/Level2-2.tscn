[gd_scene load_steps=15 format=3 uid="uid://blesr3j2narb2"]

[ext_resource type="Material" uid="uid://het7jrx0ji3i" path="res://Scenes/halftone.tres" id="1_bdhec"]
[ext_resource type="PackedScene" uid="uid://dq2ovlb72j0hk" path="res://Scenes/Midas.tscn" id="2_puwp1"]
[ext_resource type="Texture2D" uid="uid://bbxgwjgcnwqn1" path="res://Sprites/shader.png" id="3_8f4yq"]
[ext_resource type="PackedScene" uid="uid://dgs0b6egrwal3" path="res://Scenes/Gate.tscn" id="4_mya45"]
[ext_resource type="PackedScene" uid="uid://doiheku4ffurc" path="res://Scenes/receiver.tscn" id="5_ubinm"]
[ext_resource type="PackedScene" uid="uid://b22wkfawh2f4e" path="res://tile_map.tscn" id="6_gc26q"]
[ext_resource type="PackedScene" uid="uid://6vvx7lqd6iam" path="res://Scenes/Button.tscn" id="7_2teab"]
[ext_resource type="PackedScene" uid="uid://dup7ropid75ax" path="res://Scenes/Crate.tscn" id="8_6gc13"]
[ext_resource type="Texture2D" uid="uid://cgkccq6ok8pf4" path="res://Parallax/ruins bg.png" id="9_vnltl"]
[ext_resource type="Texture2D" uid="uid://bng3dut24e4k2" path="res://Parallax/ruins far.png" id="10_1w50f"]
[ext_resource type="Texture2D" uid="uid://do223m5nqwvxj" path="res://Parallax/ruins mid.png" id="11_akn8c"]
[ext_resource type="Texture2D" uid="uid://dx6sc2tmo50t2" path="res://Parallax/ruins close.png" id="12_i1j2b"]

[sub_resource type="Shader" id="Shader_j5w81"]
code = "shader_type canvas_item;

uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap;

uniform float angle = -0.3;
uniform float position = -0.2;
uniform float spread : hint_range(0.0, 1.0) = 0.5;
uniform float cutoff : hint_range(-1.0, 1.0) = 0.1;
uniform float falloff : hint_range(0.0, 1.0) = 0.2;
uniform float edge_fade : hint_range(0.0, 1.0) = 0.15;

uniform float speed = 1.0;
uniform float ray1_density = 8.0;
uniform float ray2_density = 30.0;
uniform float ray2_intensity : hint_range(0.0, 1.0) = 0.3;
uniform vec4 color : source_color = vec4(1.0, 0.9, 0.65, 0.8);

uniform bool hdr = false;
uniform float seed = 5.0;

// Random and noise functions from Book of Shader's chapter on Noise.
float random(vec2 _uv) {
    return fract(sin(dot(_uv.xy,
                         vec2(12.9898, 78.233))) *
        43758.5453123);
}

float noise (in vec2 uv) {
    vec2 i = floor(uv);
    vec2 f = fract(uv);

    // Four corners in 2D of a tile
    float a = random(i);
    float b = random(i + vec2(1.0, 0.0));
    float c = random(i + vec2(0.0, 1.0));
    float d = random(i + vec2(1.0, 1.0));


    // Smooth Interpolation

    // Cubic Hermine Curve. Same as SmoothStep()
    vec2 u = f * f * (3.0-2.0 * f);

    // Mix 4 coorners percentages
    return mix(a, b, u.x) +
            (c - a)* u.y * (1.0 - u.x) +
            (d - b) * u.x * u.y;
}

mat2 rotate(float _angle){
    return mat2(vec2(cos(_angle), -sin(_angle)),
                vec2(sin(_angle), cos(_angle)));
}

vec4 screen(vec4 base, vec4 blend){
	return 1.0 - (1.0 - base) * (1.0 - blend);
}

void fragment()
{
	
	// Rotate, skew and move the UVs
	vec2 transformed_uv = ( rotate(angle) * (UV - position) )  / ( (UV.y + spread) - (UV.y * spread) );
	
	// Animate the ray according the the new transformed UVs
	vec2 ray1 = vec2(transformed_uv.x * ray1_density + sin(TIME * 0.1 * speed) * (ray1_density * 0.2) + seed, 1.0);
	vec2 ray2 = vec2(transformed_uv.x * ray2_density + sin(TIME * 0.2 * speed) * (ray1_density * 0.2) + seed, 1.0);
	
	// Cut off the ray's edges
	float cut = step(cutoff, transformed_uv.x) * step(cutoff, 1.0 - transformed_uv.x);
	ray1 *= cut;
	ray2 *= cut;
	
	// Apply the noise pattern (i.e. create the rays)
	float rays;
	
	if (hdr){
		// This is not really HDR, but check this to not clamp the two merged rays making 
		// their values go over 1.0. Can make for some nice effect
		rays = noise(ray1) + (noise(ray2) * ray2_intensity);
	}
	else{
		 rays = clamp(noise(ray1) + (noise(ray2) * ray2_intensity), 0., 1.);
	}
	
	// Fade out edges
	rays *= smoothstep(0.0, falloff, (1.0 - UV.y)); // Bottom
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, transformed_uv.x); // Left
	rays *= smoothstep(0.0 + cutoff, edge_fade + cutoff, 1.0 - transformed_uv.x); // Right
	
	// Color to the rays
	vec3 shine = vec3(rays) * color.rgb;

	// Try different blending modes for a nicer effect. \"Screen\" is included in the code,
	// but take a look at https://godotshaders.com/snippet/blending-modes/ for more.
	// With \"Screen\" blend mode:
	shine = screen(texture(SCREEN_TEXTURE, SCREEN_UV), vec4(color)).rgb;
	
	COLOR = vec4(shine, rays * color.a);
}"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_c7dyy"]
shader = SubResource("Shader_j5w81")
shader_parameter/angle = -0.476
shader_parameter/position = -0.629
shader_parameter/spread = 1.0
shader_parameter/cutoff = 0.1
shader_parameter/falloff = 1.0
shader_parameter/edge_fade = 0.131
shader_parameter/speed = 1.0
shader_parameter/ray1_density = 14.369
shader_parameter/ray2_density = 36.056
shader_parameter/ray2_intensity = 0.3
shader_parameter/color = Color(1, 0.901961, 0.65098, 0.631373)
shader_parameter/hdr = false
shader_parameter/seed = 3.195

[node name="Level" type="Node2D"]
material = ExtResource("1_bdhec")

[node name="Midas" parent="." instance=ExtResource("2_puwp1")]
position = Vector2(130, 121)

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(160, 90)

[node name="Sprite2D" type="Sprite2D" parent="."]
material = SubResource("ShaderMaterial_c7dyy")
position = Vector2(160, 90)
scale = Vector2(80, 45)
texture = ExtResource("3_8f4yq")

[node name="TileMap" parent="." instance=ExtResource("6_gc26q")]
layer_0/tile_data = PackedInt32Array(-1, 1179652, 1, 65535, 1179652, 1, 131071, 1179652, 1, 196607, 1179652, 1, 262143, 1179652, 1, 327679, 1179652, 1, 393215, 1179652, 1, -65536, 1179652, 1, -65535, 1179652, 1, -65534, 1179652, 1, -65533, 1179652, 1, -65532, 1179652, 1, -65531, 1179652, 1, -65530, 1179652, 1, -65529, 1179652, 1, -65528, 1179652, 1, -65527, 1179652, 1, -65526, 1179652, 1, -65525, 1179652, 1, -65524, 1179652, 1, -65523, 1179652, 1, -65522, 1179652, 1, -65521, 1179652, 1, -65520, 1179652, 1, -65519, 1179652, 1, -65518, 1179652, 1, -65517, 1179652, 1, -65516, 1179652, 1, -65515, 1179652, 1, -65514, 1179652, 1, -65513, 1179652, 1, -65512, 1179652, 1, -65511, 1179652, 1, -65510, 1179652, 1, -65509, 1179652, 1, -65508, 1179652, 1, -65507, 1179652, 1, -65506, 1179652, 1, -65505, 1179652, 1, -65504, 1179652, 1, -65503, 1179652, 1, -65502, 1179652, 1, -65501, 1179652, 1, -65500, 1179652, 1, -65499, 1179652, 1, -65498, 1179652, 1, -65497, 1179652, 1, -65496, 1179652, 1, 40, 1179652, 1, 65576, 1179652, 1, 131112, 1179652, 1, 196648, 1179652, 1, 262184, 1179652, 1, 327720, 1179652, 1, 458751, 1179652, 1, 524287, 1179652, 1, 589823, 1179652, 1, 655359, 1179652, 1, 720895, 1179652, 1, 786431, 1179652, 1, 851967, 1179652, 1, 917503, 1179652, 1, 983039, 1179652, 1, 1048575, 1179652, 1, 1114111, 1179652, 1, 1179647, 1179652, 1, 1245183, 1179652, 1, 1310719, 1179652, 1, 1376255, 1179652, 1, 1441791, 1179652, 1, 1507327, 1179652, 1, 1114112, 1179652, 1, 1179648, 1179652, 1, 1245184, 1179652, 1, 1114113, 1179652, 1, 1179649, 1179652, 1, 1245185, 1179652, 1, 1245186, 1179652, 1, 1114115, 1179652, 1, 1179651, 1179652, 1, 1245187, 1179652, 1, 1114116, 1179652, 1, 1179652, 1179652, 1, 1245188, 1179652, 1, 1114117, 1179652, 1, 1114118, 1179652, 1, 1048583, 1179652, 1, 1114119, 1179652, 1, 1179655, 1179652, 1, 1245191, 1179652, 1, 1048584, 1179652, 1, 1114120, 1179652, 1, 1179656, 1179652, 1, 1245192, 1179652, 1, 1376267, 1179652, 1, 1441803, 1179652, 1, 1376268, 1179652, 1, 1441804, 1179652, 1, 1376269, 1179652, 1, 1441805, 1179652, 1, 1376270, 1179652, 1, 1441806, 1179652, 1, 1376271, 1179652, 1, 1441807, 1179652, 1, 1376272, 1179652, 1, 1441808, 1179652, 1, 1376273, 1179652, 1, 1441809, 1179652, 1, 1310738, 1179652, 1, 1376274, 1179652, 1, 1441810, 1179652, 1, 1310739, 1179652, 1, 1376275, 1179652, 1, 1441811, 1179652, 1, 1441813, 1179652, 1, 1441814, 1179652, 1, 1441815, 1179652, 1, 1310744, 1179652, 1, 1376280, 1179652, 1, 1441816, 1179652, 1, 1310745, 1179652, 1, 1376281, 1179652, 1, 1441817, 1179652, 1, 1048602, 1179652, 1, 1310746, 1179652, 1, 1376282, 1179652, 1, 1441818, 1179652, 1, 1048603, 1179652, 1, 1310747, 1179652, 1, 1376283, 1179652, 1, 1441819, 1179652, 1, 1048604, 1179652, 1, 1310748, 1179652, 1, 1376284, 1179652, 1, 1441820, 1179652, 1, 1310749, 1179652, 1, 1376285, 1179652, 1, 1441821, 1179652, 1, 1441822, 1179652, 1, 1441823, 1179652, 1, 1245216, 1179652, 1, 1441824, 1179652, 1, 1245217, 1179652, 1, 1441825, 1179652, 1, 1245218, 1179652, 1, 1441826, 1179652, 1, 1048611, 1179652, 1, 1114147, 1179652, 1, 1179683, 1179652, 1, 1245219, 1179652, 1, 1310755, 1179652, 1, 1376291, 1179652, 1, 1441827, 1179652, 1, 1048612, 1179652, 1, 1114148, 1179652, 1, 1179684, 1179652, 1, 1245220, 1179652, 1, 1048613, 1179652, 1, 1114149, 1179652, 1, 1179685, 1179652, 1, 1245221, 1179652, 1, 393256, 1179652, 1, 458792, 1179652, 1, 524328, 1179652, 1, 589864, 1179652, 1, 655400, 1179652, 1, 720936, 1179652, 1, 786472, 1179652, 1, 852008, 1179652, 1, 917544, 1179652, 1, 983080, 1179652, 1, 1048616, 1179652, 1, 1114152, 1179652, 1, 1179688, 1179652, 1, 1245224, 1179652, 1, 1310760, 1179652, 1, 1376296, 1179652, 1, 1441832, 1179652, 1, 1048576, 1179652, 1, 1441792, 1179652, 1, 1048577, 1179652, 1, 1441793, 1179652, 1, 1048578, 1179652, 1, 1179650, 1179652, 1, 1441794, 1179652, 1, 1048579, 1179652, 1, 1441795, 1179652, 1, 1048580, 1179652, 1, 1441796, 1179652, 1, 1048581, 1179652, 1, 1441797, 1179652, 1, 1048582, 1179652, 1, 1441798, 1179652, 1, 1441799, 1179652, 1, 1441800, 1179652, 1, 1441801, 1179652, 1, 1441802, 1179652, 1, 1376277, 1179652, 1, 1376278, 1179652, 1, 1376279, 1179652, 1, 1245208, 1179652, 1, 1245209, 1179652, 1, 1245210, 1179652, 1, 1245211, 1179652, 1, 1245212, 1179652, 1, 1048605, 1179652, 1, 1245213, 1179652, 1, 1048606, 1179652, 1, 1376286, 1179652, 1, 1376287, 1179652, 1, 1179680, 1179652, 1, 1376288, 1179652, 1, 1179681, 1179652, 1, 1376289, 1179652, 1, 1179682, 1179652, 1, 1376290, 1179652, 1, 1441828, 1179652, 1, 1441829, 1179652, 1, 1441830, 1179652, 1, 1441831, 1179652, 1, 1114114, 1179652, 1, 1310720, 1179652, 1, 1310721, 1179652, 1, 1310722, 1179652, 1, 1310723, 1179652, 1, 1310724, 1179652, 1, 1310727, 1179652, 1, 1310728, 1179652, 1, 1376266, 1179652, 1, 1376265, 1179652, 1, 1376264, 1179652, 1, 1376263, 1179652, 1, 1376262, 1179652, 1, 1376261, 1179652, 1, 1376260, 1179652, 1, 1376259, 1179652, 1, 1376258, 1179652, 1, 1376257, 1179652, 1, 1376256, 1179652, 1, 1048600, 1179652, 1, 1048601, 1179652, 1, 1114141, 1179652, 1, 1114142, 1179652, 1, 1114143, 1179652, 1, 1114144, 1179652, 1, 1114145, 1179652, 1, 1114146, 1179652, 1, 1114150, 1179652, 1, 1048614, 1179652, 1, 1048615, 1179652, 1, 1048617, 1179652, 1, 1048610, 1179652, 1, 1048609, 1179652, 1, 1048608, 1179652, 1, 1048607, 1179652, 1, 1114138, 1179652, 1, 1114137, 1179652, 1, 1114136, 1179652, 1, 1114139, 1179652, 1, 1114140, 1179652, 1, 1179679, 1179652, 1, 1179678, 1179652, 1, 1179677, 1179652, 1, 1179676, 1179652, 1, 1179675, 1179652, 1, 1179674, 1179652, 1, 1179673, 1179652, 1, 1179672, 1179652, 1, 1245214, 1179652, 1, 1245215, 1179652, 1, 1310750, 1179652, 1, 1310743, 1179652, 1, 1310742, 1179652, 1, 1310741, 1179652, 1, 1310756, 1179652, 1, 1310754, 1179652, 1, 1310753, 1179652, 1, 1310752, 1179652, 1, 1310751, 1179652, 1, 1245222, 1179652, 1, 1179686, 1179652, 1, 1179687, 1179652, 1, 1114151, 1179652, 1, 1245223, 1179652, 1, 1310759, 1179652, 1, 1376295, 1179652, 1, 1376294, 1179652, 1, 1376293, 1179652, 1, 1376292, 1179652, 1, 1310757, 1179652, 1, 1310758, 1179652, 1, 1048594, 1179652, 1, 1114130, 1179652, 1, 1179666, 1179652, 1, 1245202, 1179652, 1, 1245203, 1179652, 1, 1179667, 1179652, 1, 1114131, 1179652, 1, 1048595, 1179652, 1, 1048597, 1179652, 1, 1114134, 1179652, 1, 1114135, 1179652, 1, 1179671, 1179652, 1, 1179670, 1179652, 1, 1179669, 1179652, 1, 1114133, 1179652, 1, 1048598, 1179652, 1, 1048599, 1179652, 1, 1245206, 1179652, 1, 1245205, 1179652, 1, 1245207, 1179652, 1, 1048585, 1179652, 1, 1114121, 1179652, 1, 1179657, 1179652, 1, 1245193, 1179652, 1, 1310729, 1179652, 1, 1048586, 1179652, 1, 1114122, 1179652, 1, 1179658, 1179652, 1, 1245194, 1179652, 1, 1310730, 1179652, 1, 1048587, 1179652, 1, 1114123, 1179652, 1, 1048588, 1179652, 1, 1114124, 1179652, 1, 1048589, 1179652, 1, 1048590, 1179652, 1, 1114126, 1179652, 1, 1179662, 1179652, 1, 1245198, 1179652, 1, 1310734, 1179652, 1, 1310733, 1179652, 1, 1245197, 1179652, 1, 1179661, 1179652, 1, 1114125, 1179652, 1, 1114127, 1179652, 1, 1114128, 1179652, 1, 1048592, 1179652, 1, 1048591, 1179652, 1, 1048593, 1179652, 1, 1114129, 1179652, 1, 1179665, 1179652, 1, 1245201, 1179652, 1, 1310736, 1179652, 1, 1310735, 1179652, 1, 1245199, 1179652, 1, 1179664, 1179652, 1, 1310737, 1179652, 1, 1245200, 1179652, 1, 1179663, 1179652, 1, 1179654, 1179652, 1, 1179659, 1179652, 1, 1179660, 1179652, 1, 1245196, 1179652, 1, 1245195, 1179652, 1, 1245190, 1179652, 1, 1245189, 1179652, 1, 1179653, 1179652, 1, 1310731, 1179652, 1, 1310726, 1179652, 1, 1310725, 1179652, 1, 1310732, 1179652, 1, 983049, 1179652, 1, 983048, 1179652, 1, 983047, 1179652, 1, 917511, 1179652, 1, 917512, 1179652, 1, 917513, 1179652, 1, 917514, 1179652, 1, 917515, 1179652, 1, 917516, 1179652, 1, 983052, 1179652, 1, 983051, 1179652, 1, 983050, 1179652, 1, 917510, 1179652, 1, 917509, 1179652, 1, 917508, 1179652, 1, 917507, 1179652, 1, 917506, 1179652, 1, 917505, 1179652, 1, 917504, 1179652, 1, 983040, 1179652, 1, 983041, 1179652, 1, 983042, 1179652, 1, 983043, 1179652, 1, 983044, 1179652, 1, 983045, 1179652, 1, 983046, 1179652, 1, 524317, 1179652, 1, 589853, 1179652, 1, 589854, 1179652, 1, 589855, 1179652, 1, 589856, 1179652, 1, 524320, 1179652, 1, 524318, 1179652, 1, 524319, 1179652, 1, 1114132, 1179652, 1, 1179668, 1179652, 1, 1245204, 1179652, 1, 1310740, 1179652, 1, 1376276, 1179652, 1, 1441812, 1179652, 1, 917524, 1179652, 1, 851988, 1179652, 1, 851987, 1179652, 1, 851989, 1179652, 1, 589842, 1179652, 1, 524306, 1179652, 1, 524305, 1179652, 1, 524304, 1179652, 1, 524303, 1179652, 1, 589839, 1179652, 1, 589840, 1179652, 1, 589841, 1179652, 1, 655375, 1179652, 1, 524302, 1179652, 1, 589838, 1179652, 1, 655374, 1179652, 1, 524310, 1179652, 1, 589846, 1179652, 1, 589847, 1179652, 1, 589848, 1179652, 1, 524312, 1179652, 1, 524311, 1179652, 1, 524313, 1179652, 1, 524314, 1179652, 1, 524315, 1179652, 1, 524316, 1179652, 1, 589852, 1179652, 1, 589851, 1179652, 1, 589850, 1179652, 1, 589849, 1179652, 1, 589857, 1179652, 1, 589858, 1179652, 1, 589859, 1179652, 1, 589862, 1179652, 1, 589863, 1179652, 1, 524327, 1179652, 1, 524326, 1179652, 1, 524325, 1179652, 1, 524324, 1179652, 1, 524323, 1179652, 1, 524322, 1179652, 1, 524321, 1179652, 1, 589860, 1179652, 1, 589861, 1179652, 1)
layer_1/tile_data = PackedInt32Array(1114112, 327684, 0, 1179648, 327684, 0, 1245184, 327684, 0, 1310720, 327684, 0, 1376256, 327684, 0, 1114113, 327684, 0, 1179649, 327684, 0, 1245185, 327684, 0, 1310721, 327684, 0, 1376257, 327684, 0, 1114114, 327684, 0, 1179650, 327684, 0, 1245186, 327684, 0, 1310722, 327684, 0, 1376258, 327684, 0, 1114115, 327684, 0, 1179651, 327684, 0, 1245187, 327684, 0, 1310723, 327684, 0, 1376259, 327684, 0, 1114116, 327684, 0, 1179652, 327684, 0, 1245188, 327684, 0, 1310724, 327684, 0, 1376260, 327684, 0, 1114117, 327684, 0, 1179653, 327684, 0, 1245189, 327684, 0, 1310725, 327684, 0, 1376261, 327684, 0, 1114118, 327684, 0, 1179654, 327684, 0, 1245190, 327684, 0, 1310726, 327684, 0, 1376262, 327684, 0, 1114119, 327684, 0, 1179655, 327684, 0, 1245191, 327684, 0, 1310727, 327684, 0, 1376263, 327684, 0, 1114120, 327684, 0, 1179656, 327684, 0, 1245192, 327684, 0, 1310728, 327684, 0, 1376264, 327684, 0, 1114121, 327684, 0, 1179657, 327684, 0, 1245193, 327684, 0, 1310729, 327684, 0, 1376265, 327684, 0, 1114122, 327684, 0, 1179658, 327684, 0, 1245194, 327684, 0, 1310730, 327684, 0, 1376266, 327684, 0, 1114123, 327684, 0, 1179659, 327684, 0, 1245195, 327684, 0, 1310731, 327684, 0, 1376267, 327684, 0, 1114124, 327684, 0, 1179660, 327684, 0, 1245196, 327684, 0, 1310732, 327684, 0, 1376268, 327684, 0, 1310733, 327684, 0, 1376269, 327684, 0, 1310734, 327684, 0, 1376270, 327684, 0, 1310735, 327684, 0, 1376271, 327684, 0, 1114128, 1179652, 3, 1310736, 327684, 0, 1376272, 1179652, 3, 1179665, 1179652, 3, 1179666, 1179652, 3, 1179667, 1179652, 3, 1245203, 1048580, 7, 1310739, 1179652, 3, 1376275, 1179652, 3, 1245204, 1179652, 3, 1310740, 1179652, 3, 1376276, 1179652, 3, 1179669, 1179652, 3, 1245205, 1179652, 3, 1310741, 1179652, 3, 1376277, 1179652, 3, 1114134, 1179652, 3, 1179670, 1179652, 3, 1245206, 1179652, 3, 1310742, 1179652, 3, 1376278, 1179652, 3, 1245207, 1179652, 3, 1310743, 1179652, 3, 1376279, 1179652, 3, 1310744, 1179652, 3, 1376280, 1179652, 3, 1179673, 1179652, 3, 1245209, 1179652, 3, 1310745, 1179652, 3, 1376281, 1179652, 3, 1048602, 1179652, 3, 1114138, 1179652, 3, 1179674, 1179652, 3, 1245210, 1179652, 3, 1310746, 1179652, 3, 1376282, 1179652, 3, 851995, 1179652, 3, 917531, 1179652, 3, 983067, 1179652, 3, 1048603, 1179652, 3, 1114139, 1179652, 3, 1179675, 1179652, 3, 1245211, 1179652, 3, 1310747, 1179652, 3, 1376283, 1179652, 3, 1048604, 1179652, 3, 1114140, 1179652, 3, 1310748, 1179652, 3, 1376284, 1179652, 3, 1048605, 1179652, 3, 1245213, 1179652, 3, 1310749, 1179652, 3, 1376285, 1179652, 3, 1048606, 1179652, 3, 1245216, 1179652, 3, 1310752, 1179652, 3, 1376288, 1179652, 3, 1245217, 1179652, 3, 1310753, 1179652, 3, 1376289, 1179652, 3, 1245218, 1179652, 3, 1310754, 1179652, 3, 1376290, 1179652, 3, 1245219, 1179652, 3, 1310755, 1179652, 3, 1376291, 1179652, 3, 720932, 1179652, 3, 1114148, 1179652, 3, 1179684, 1179652, 3, 1245220, 1179652, 3, 1310756, 1179652, 3, 1376292, 1179652, 3, 720933, 1179652, 3, 1179685, 1179652, 3, 1245221, 1179652, 3, 1310757, 1179652, 3, 1376293, 1179652, 3, 655398, 1179652, 3, 720934, 1179652, 3, 1245222, 1179652, 3, 1310758, 1179652, 3, 1376294, 1179652, 3, 1048576, 327684, 0, 1048577, 327684, 0, 1048578, 327684, 0, 1048579, 327684, 0, 1048580, 327684, 0, 1048581, 327684, 0, 1048582, 327684, 0, 1048583, 327684, 0, 1048584, 327684, 0, 1048585, 327684, 0, 1048586, 327684, 0, 1048587, 327684, 0, 1048588, 327684, 0, 1048589, 327684, 0, 1245197, 327684, 0, 1048590, 327684, 0, 1245198, 327684, 0, 1048591, 327684, 0, 1245199, 327684, 0, 1048592, 1179652, 3, 1245200, 327684, 0, 1114129, 1179652, 3, 1376273, 1179652, 3, 1114130, 1179652, 3, 1376274, 1179652, 3, 1114131, 1179652, 3, 1179668, 1179652, 3, 1114133, 1179652, 3, 1048598, 1114116, 7, 1179671, 1048580, 7, 1245208, 1179652, 3, 1114137, 1179652, 3, 983066, 1179652, 3, 786459, 1048580, 7, 851996, 1179652, 3, 983068, 1179652, 3, 1245212, 1179652, 3, 851997, 1114116, 7, 983069, 1179652, 3, 1179677, 1114116, 7, 983070, 1179652, 3, 1376287, 1179652, 3, 1179680, 1179652, 3, 1179681, 1179652, 3, 1179682, 1179652, 3, 1179683, 1179652, 3, 655396, 1179652, 3, 1048612, 1179652, 3, 655397, 1179652, 3, 1114149, 1179652, 3, 589862, 1179652, 3, 1179686, 1114116, 7, 720935, 1179652, 3, 720931, 1179652, 3, 655395, 1179652, 3, 589860, 1179652, 3, 589861, 1179652, 3, 655399, 1179652, 3, 524324, 1114116, 7, 524326, 1179652, 3, 458790, 1048580, 7, 589859, 1179652, 3, 589863, 1179652, 3)

[node name="Button2" parent="." instance=ExtResource("7_2teab")]
position = Vector2(108, 124)

[node name="ParallaxBackground" type="ParallaxBackground" parent="."]

[node name="ParallaxLayer" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2(320, 180)

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer"]
texture_filter = 1
texture = ExtResource("9_vnltl")
centered = false

[node name="ParallaxLayer2" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2(320, 0)

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer2"]
texture_filter = 1
texture = ExtResource("10_1w50f")
centered = false

[node name="ParallaxLayer3" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2(320, 0)

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer3"]
texture_filter = 1
texture = ExtResource("11_akn8c")
centered = false

[node name="ParallaxLayer4" type="ParallaxLayer" parent="ParallaxBackground"]
motion_mirroring = Vector2(320, 0)

[node name="Sprite2D" type="Sprite2D" parent="ParallaxBackground/ParallaxLayer4"]
texture_filter = 1
texture = ExtResource("12_i1j2b")
centered = false

[node name="Label" type="Label" parent="."]
offset_left = 284.0
offset_top = 71.0
offset_right = 330.0
offset_bottom = 97.0
text = "goal"

[node name="CharacterBody2D" parent="." instance=ExtResource("8_6gc13")]
position = Vector2(96, 100)

[node name="CharacterBody2D2" parent="." instance=ExtResource("8_6gc13")]
position = Vector2(193, 121)

[node name="Gate anchor" parent="." instance=ExtResource("4_mya45")]
position = Vector2(136, 84)
rotation = -4.71238

[node name="receiver" parent="." instance=ExtResource("5_ubinm")]
position = Vector2(259, 121)
